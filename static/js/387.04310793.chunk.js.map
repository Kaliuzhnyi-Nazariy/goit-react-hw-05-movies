{"version":3,"file":"static/js/387.04310793.chunk.js","mappings":"sPAEaA,EAAkB,SAAHC,GAA4B,IAAtBC,EAAcD,EAAdC,eAMhCC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAYtB,OACEI,EAAAA,EAAAA,MAAA,QAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFV,EAAe,CAAEK,MAAAA,GACnB,EAO+BM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOX,EACPY,SAXqB,SAAHC,GAA+B,IAAfF,EAAKE,EAAfC,OAAUH,MACtCV,EAASU,EACX,KAWIJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,aAG5B,E,iBC3Be,SAASS,IACtB,IAAAnB,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CoB,EAAalB,EAAA,GAAEmB,EAAgBnB,EAAA,GACtCoB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeH,EAAaI,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAY,eAAAhC,GAAAiC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAaV,GAAc,KAAD,EAAzCM,EAAMC,EAAAI,KACZlB,EAAiBa,GAAQC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,kBAI5B,kBAPiB,OAAAnC,EAAA4C,MAAA,KAAAC,UAAA,KAQlBb,GAVyB,CAW3B,GAAG,CAACL,IAEJ,IAAMmB,GAAWC,EAAAA,EAAAA,MAEjB,OACEvC,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACd,EAAe,CAACE,eAAgB2B,KACjCf,EAAAA,EAAAA,KAAA,MAAAD,SAC4B,IAAzBU,EAAc0B,QACb1B,EAAc2B,QAAQC,KAAI,SAAAC,GACxB,OACEtC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKH,EAAUI,IAAMC,MAAO,CAAEC,KAAMX,GAAWlC,SACpDuC,EAAUO,SAFNP,EAAUI,GAMvB,QAIV,C","sources":["components/SearchBar.js","pages/Movies.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const SearchBarMovies = ({ onSearchMovies }) => {\n  // const { listOfSearchingMovies, updateNameOfMovie } = useSearchMovies();\n\n  // const handleSubmit = value => {\n  //   setSearchParams({ query: value });\n  // };\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSearchMovies({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { SearchMovies } from 'components/Api';\nimport { SearchBarMovies } from 'components/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [searchedMovie, setSearchedMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const searchMovies = async () => {\n      try {\n        const result = await SearchMovies(currentQuery);\n        setSearchedMovie(result);\n      } catch (error) {\n        // console.log(error);\n      }\n    };\n    searchMovies();\n  }, [searchParams]);\n\n  const location = useLocation();\n\n  return (\n    <div>\n      <SearchBarMovies onSearchMovies={setSearchParams} />\n      <ul>\n        {searchedMovie.length !== 0 &&\n          searchedMovie.results.map(SearchMov => {\n            return (\n              <li key={SearchMov.id}>\n                <Link to={`${SearchMov.id}`} state={{ from: location }}>\n                  {SearchMov.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["SearchBarMovies","_ref","onSearchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","children","_jsx","type","placeholder","autoFocus","value","onChange","_ref2","target","Movies","searchedMovie","setSearchedMovie","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","currentQuery","get","searchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","SearchMovies","sent","t0","stop","apply","arguments","location","useLocation","length","results","map","SearchMov","Link","to","concat","id","state","from","title"],"sourceRoot":""}